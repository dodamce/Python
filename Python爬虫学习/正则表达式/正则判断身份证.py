import re

Str = str(input('输入待检测的身份证号码'))

len_str = len(Str)

isEagle = False

'''
xxxxxx yyyy MM dd 375 0 十八位
地区-----年----月--日-3位顺序码-校验码

xxxxxx yy MM dd 75 0 十五位
地区---年---月--日-2位顺序码-校验码

    # 假设18位身份证号码:41000119910101123X  410001 19910101 123X
    # ^开头
    # [1-9] 第一位1-9中的一个      4
    # \\d{5} 五位数字           10001（前六位省市县地区）
    # (18|19|20)                19（现阶段可能取值范围18xx-20xx年）
    # \\d{2}                    91（年份）
    # ((0[1-9])|(10|11|12))     01（月份）
    # (([0-2][1-9])|10|20|30|31)01（日期）
    # \\d{3} 三位数字            123（第十七位奇数代表男，偶数代表女）
    # [0-9Xx] 0123456789Xx其中的一个 X（第十八位为校验值）
    # $结尾

    # 假设15位身份证号码:410001910101123  410001 910101 123
    # ^开头
    # [1-9] 第一位1-9中的一个      4
    # \\d{5} 五位数字           10001（前六位省市县地区）
    # \\d{2}                    91（年份）
    # ((0[1-9])|(10|11|12))     01（月份）
    # (([0-2][1-9])|10|20|30|31)01（日期）
    # \\d{3} 三位数字            123（第十五位奇数代表男，偶数代表女），15位身份证不含X
    # $结尾

'''
key_18 = re.compile('^[1-9]\d{5}(18|19|20)\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$')
key_15 = re.compile('^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}$')

'''
> 1. 将身份证号码前面的17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。
> 2. 将这17位数字和系数相乘的结果相加。
> 3. 用加出来和除以11，取余数。
> 4. 余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X－9－8－7－6－5－4－3－2。
> 5. 通过上面计算得知如果余数是3，第18位的校验码就是9。如果余数是2那么对应的校验码就是X，X实际是罗马数字10。
> 
> eg：例如：某男性的身份证号码为【53010219200508011x】，
 我们看看这个身份证是不是合法的身份证。首先我们得出前17位的乘积和
 【(5×7)+(3×9)+(0×10)+(1×5)+(0×8)+(2×4)+(1×*2)+(9×1)+(2×6)+(0×3)+(0×7)+(5×9)+(0×10)+(8×5)+(0×8)+(1×4)+(1×2)】是189，
 然后用189除以11得出的结果是189/11=17----2，也就是说其余数是2。
 最后通过对应规则就可以知道余数2对应的检验码是X。所以，可以判定这是一个正确的身份证号码。
'''

# 验证身份证结构是否合法，如果18位还需要验证校验位
if len_str == 15 or len_str == 18:
    if len_str == 15 and re.match(key_15, Str):
        isEagle = True
    elif len_str == 18 and re.match(key_18, Str):
        # 前十七位加权因子
        var = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]
        # 除以11后，可能产生的11位余数对应的验证码
        var_id = ['1', '0', 'x', '9', '8', '7', '6', '5', '4', '3', '2']
        ret = 0
        for i in range(0, 17):
            ret += int(Str[i]) * var[i]
        ret %= 11
        if var_id[ret] != Str[-1].lower():
            print(f'身份证校验码错误，校验码应该为{var_id[ret]},当前校验码为{Str[-1]}')
        else:
            isEagle = True
else:
    print('身份证不合法，位数错误，请检查重试')

if isEagle:
    print('身份证合法')
else:
    print('身份证不合法')
